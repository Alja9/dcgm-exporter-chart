FROM nvcr.io/nvidia/cuda:12.2.2-base-ubi8 AS builder
ARG GOLANG_VERSION
WORKDIR /go/src/github.com/NVIDIA/dcgm-exporter
RUN set -eux; \
	dnf clean expire-cache; \
	dnf install -y go-toolset make
RUN dnf clean all

# Install Go official release
RUN set -eux; \
    url=; \
    arch=$(uname -m) \
    && if [ "${arch}" = "x86_64" ]; then arch=amd64; fi \
    && if [ "${arch}" = "aarch64" ]; then arch=arm64; fi \
    && echo "${arch}"
    # case "${arch}" in \
    # 'amd64') \
    #     url="https://dl.google.com/go/go${GOLANG_VERSION}.linux-amd64.tar.gz"; \
    #     ;; \
    # 'arm64') \
    #     url="https://dl.google.com/go/go${GOLANG_VERSION}.linux-arm64.tar.gz"; \
    #     ;; \
    # *) echo >&2 "error: unsupported architecture '${arch}'"; exit 1 ;; \
    # esac; \
    # \
    # wget -O go.tgz "$url" --progress=dot:giga; \
    # # https://github.com/golang/go/issues/14739#issuecomment-324767697
    # tar -C /usr/local -xzf go.tgz; \
    # rm -f go.tgz*; \
    # \
    # go version

COPY . .

RUN make binary check-format

FROM nvcr.io/nvidia/cuda:12.2.2-base-ubi8
LABEL io.k8s.display-name="NVIDIA DCGM Exporter"

ARG DCGM_VERSION

RUN dnf clean expire-cache && dnf install -y datacenter-gpu-manager-${DCGM_VERSION} libcap

COPY --from=builder /go/src/github.com/NVIDIA/dcgm-exporter/cmd/dcgm-exporter/dcgm-exporter /usr/bin/
COPY etc /etc/dcgm-exporter

ENV NVIDIA_VISIBLE_DEVICES=all
# disable all constraints on the configurations required by NVIDIA container toolkit
ENV NVIDIA_DISABLE_REQUIRE="true"
# Required for DCP metrics
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility,compat32

ARG VERSION

LABEL io.k8s.display-name="NVIDIA DCGM Eporter"
LABEL name="NVIDIA DCGM Exporter"
LABEL vendor="NVIDIA"
LABEL version="${VERSION}"
LABEL release="N/A"
LABEL summary="Exports GPU Metrics to Prometheus"
LABEL description="See summary"

COPY ./LICENSE ./licenses/LICENSE

ENV NO_SETCAP=
COPY docker/dcgm-exporter-entrypoint.sh /usr/local/dcgm/dcgm-exporter-entrypoint.sh
RUN chmod +x /usr/local/dcgm/dcgm-exporter-entrypoint.sh

ENTRYPOINT ["/usr/local/dcgm/dcgm-exporter-entrypoint.sh"]
